{"version":3,"sources":["heart2.png","Question.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Question","getQuestions","fetch","then","response","json","setState","questions","temp","index","a","state","ctr","length","Math","floor","random","array","currentQuestionId","correctAnswer","wrongAnswer1","wrongAnswer2","wrongAnswer3","randomAnswers","lives","questionNum","totalScore","notClicked","seconds","gameOver","gameStarted","name","leaderboard","bind","handleClick","handleStart","handleNameChange","handleEndGame","handleNewGame","this","event","target","value","clearInterval","myInterval","setInterval","handleTimesUp","textContent","substring","trim","style","backgroundColor","prevState","setTimeout","nextQuestion","toUpperCase","i","display","src","heart2","width","alt","className","type","minLength","maxLength","placeholder","onChange","margin","fontWeight","onClick","window","innerWidth","question","border","borderRadius","padding","color","score","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.73382eb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart2.2bc746fd.png\";","import React from \"react\"\r\nimport heart2 from \"./heart2.png\"\r\n\r\nclass Question extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            lives: 3,\r\n            questionNum: 1,\r\n            totalScore: 0,\r\n            questions: [{ \"id\": 0, \"question\": \"loading...\", \"correctAnswer\": \"loading...\", \"wrongAnswer1\": \"loading...\", \"wrongAnswer2\": \"loading...\", \"wrongAnswer3\": \"loading...\" }],\r\n            currentQuestionId: 0,\r\n            notClicked: true,\r\n            randomAnswers: [],\r\n            seconds: 2000,\r\n            gameOver: false,\r\n            gameStarted: false,\r\n            name: '',\r\n            leaderboard: [{ \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }]\r\n        }\r\n        this.getQuestions = this.getQuestions.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleStart = this.handleStart.bind(this)\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleEndGame = this.handleEndGame.bind(this)\r\n        this.handleNewGame = this.handleNewGame.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestions()\r\n        \r\n        \r\n    }\r\n\r\n    getQuestions = () => {\r\n        fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/questions')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({ questions: response })\r\n                const a = this.state.questions\r\n                let ctr = a.length, temp, index\r\n                while (ctr > 0) {\r\n                    index = Math.floor(Math.random() * ctr)\r\n                    ctr--\r\n                    temp = a[ctr]\r\n                    a[ctr] = a[index]\r\n                    a[index] = temp\r\n                }\r\n                this.setState({ questions: a })\r\n                const array = [this.state.questions[this.state.currentQuestionId].correctAnswer, this.state.questions[this.state.currentQuestionId].wrongAnswer1, this.state.questions[this.state.currentQuestionId].wrongAnswer2, this.state.questions[this.state.currentQuestionId].wrongAnswer3]\r\n                ctr = array.length\r\n                while (ctr > 0) {\r\n                    index = Math.floor(Math.random() * ctr)\r\n                    ctr--\r\n                    temp = array[ctr]\r\n                    array[ctr] = array[index]\r\n                    array[index] = temp\r\n                }\r\n                this.setState({ randomAnswers: array })\r\n            })\r\n            \r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    handleStart() {\r\n        if (this.state.name.length > 0) {\r\n            this.setState({ gameStarted: true })\r\n            this.setState({ seconds:2000 })\r\n            clearInterval(this.myInterval)\r\n            this.myInterval = setInterval(() => {\r\n                if (this.state.seconds > -300) {\r\n                    this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n                }\r\n                if (this.state.seconds === 0) {\r\n                    this.handleTimesUp()\r\n                }\r\n            }, 10)\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        clearInterval(this.myInterval)\r\n        if (event.target.textContent.substring(3).trim() === this.state.questions[this.state.currentQuestionId].correctAnswer.trim()) {\r\n            event.target.style.backgroundColor = '#79ff4d'\r\n            this.setState(({ totalScore }) => ({ totalScore: totalScore + Math.floor(this.state.seconds/20) }))\r\n        }\r\n\r\n        else {\r\n            event.target.style.backgroundColor = '#ff4000'\r\n            this.setState((prevState) => {\r\n                return { lives: prevState.lives - 1 }\r\n            })\r\n        }\r\n        this.setState({ notClicked: false })\r\n        setTimeout(() => {\r\n            \r\n            if (this.state.questionNum === this.state.questions.length || this.state.lives===0) {\r\n                this.handleEndGame()\r\n            }\r\n            else {\r\n                this.nextQuestion()\r\n            }\r\n        }, 3000)\r\n        \r\n        \r\n    }\r\n\r\n    handleTimesUp() {\r\n        clearInterval(this.myInterval)\r\n        this.setState(({ lives }) => ({ lives: lives - 1 }))\r\n        setTimeout(() => {\r\n            if (this.state.questionNum === this.state.questions.length || this.state.lives === 0) {\r\n                this.handleEndGame()\r\n            }\r\n            else {\r\n                this.nextQuestion()\r\n            }\r\n        },3000)\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.setState(({ questionNum }) => ({ questionNum: questionNum + 1 }))\r\n        this.setState(({ currentQuestionId }) => ({ currentQuestionId: currentQuestionId + 1 }))\r\n        this.setState({ notClicked: true })\r\n        const array = [this.state.questions[this.state.currentQuestionId].correctAnswer, this.state.questions[this.state.currentQuestionId].wrongAnswer1, this.state.questions[this.state.currentQuestionId].wrongAnswer2, this.state.questions[this.state.currentQuestionId].wrongAnswer3]\r\n        let ctr = array.length, temp, index\r\n        while (ctr > 0) {\r\n            index = Math.floor(Math.random() * ctr)\r\n            ctr--\r\n            temp = array[ctr]\r\n            array[ctr] = array[index]\r\n            array[index] = temp\r\n        }\r\n        this.setState({ randomAnswers: array })\r\n        this.setState({ seconds: 2000 })\r\n        this.myInterval = setInterval(() => {\r\n            if (this.state.seconds > -300) {\r\n                this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n            }\r\n            if (this.state.seconds === -300) {\r\n                this.handleTimesUp()\r\n            }\r\n        }, 10)\r\n    }\r\n\r\n    handleEndGame() {\r\n        this.setState({\r\n            questions: null,\r\n        })\r\n        this.setState({ gameOver: true })\r\n        fetch(`https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/addscore?name=${this.state.name.toUpperCase().trim()}&score=${this.state.totalScore}`)\r\n        //fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/leaderboard')\r\n        //    .then(response => response.json())\r\n        //    .then(response => this.setState({ leaderboard: response }))\r\n        this.setState({ seconds: 3 })\r\n        this.myInterval = setInterval(() => {\r\n            if (this.state.seconds > 0) {\r\n                this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n            }\r\n            if (this.state.seconds === 0) {\r\n                fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/leaderboard')\r\n                    .then(response => response.json())\r\n                    .then(response => this.setState({ leaderboard: response }))\r\n                fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/deletescore')\r\n                this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    handleNewGame() {\r\n        this.setState({\r\n            lives: 3,\r\n            questionNum: 1,\r\n            totalScore: 0,\r\n            questions: [{ \"id\": 0, \"question\": \"loading...\", \"correctAnswer\": \"loading...\", \"wrongAnswer1\": \"loading...\", \"wrongAnswer2\": \"loading...\", \"wrongAnswer3\": \"loading...\" }],\r\n            currentQuestionId: 0,\r\n            notClicked: true,\r\n            randomAnswers: [],\r\n            seconds: 2000,\r\n            gameOver: false,\r\n            gameStarted: false,\r\n            name: '',\r\n            leaderboard: [{ \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }]\r\n        })\r\n        this.getQuestions()\r\n    }\r\n\r\n    displayLives() {\r\n        let i\r\n        for (i = 0; i < this.state.lives; i++) {\r\n            return (<div style={{ display: \"inline-block\" }}><img src={heart2} width=\"40px\" alt=\"error\" /></div>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div style={{ display: this.state.gameStarted ? \"none\" : \"block\" }}>\r\n                    <h1 className=\"headline-njit\" >NJIT</h1>\r\n                    <h1 className=\"headline-snd\" >Swimming & Diving</h1>\r\n                    <h1 className=\"headline\" >Trivia Game</h1>\r\n                    <input className=\"name-input\" type=\"text\" minLength=\"1\" maxLength=\"10\" placeholder=\"Enter your name\" value={this.state.name} onChange={this.handleNameChange} style={{ width: 200, margin: \"1rem auto\", fontWeight:\"bold\" }} />\r\n                    <div className=\"start-button\" onClick={this.handleStart}>start!</div>\r\n                </div>\r\n                <div style={{ display: this.state.questions && this.state.gameStarted ? \"block\" : \"none\" }}>\r\n                    <table style={{ display: this.state.questions && this.state.gameStarted ? \"block\" : \"none\" }} className=\"table-bar\" >\r\n                        <tr>\r\n                            <td className=\"td-bar\">{this.state.totalScore}</td>\r\n                            <td className=\"td-bar\">Question {this.state.questionNum}</td>\r\n                            <td className=\"td-bar\">{this.state.seconds > 0 ? (this.state.seconds/100 | 0)+1:\"Time's up!\"}</td>\r\n                            <td className=\"td-bar\">\r\n                                <div>\r\n                                    <div style={{ display: this.state.lives > 0 ? \"inline-block\" : \"none\" }}><img src={heart2} width=\"25rem\" alt=\"error\" /></div>\r\n                                    <div style={{ display: this.state.lives > 1 ? \"inline-block\" : \"none\" }}><img src={heart2} width= \"25rem\" alt=\"error\" /></div>\r\n                                    <div style={{ display: this.state.lives > 2 ? \"inline-block\" : \"none\" }}><img src={heart2} width={window.innerWidth > 900 ? \"25rem\" : \"25rem\"} alt=\"error\" /></div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <br style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }} />\r\n                    <div className=\"question\" style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }}>{this.state.questions && this.state.questions[this.state.currentQuestionId].question}</div>\r\n                    <br style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && ''  }}> A: {this.state.questions && this.state.randomAnswers[0]}</div>\r\n                    <br style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}>B: {this.state.questions && this.state.randomAnswers[1]}</div>\r\n                    <br style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}>C: {this.state.questions && this.state.randomAnswers[2]}</div>\r\n                    <br style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}>D: {this.state.questions && this.state.randomAnswers[3]}</div>\r\n                    <br style={{ display: this.state.questions && this.state.seconds > -300 ? \"block\" : \"none\" }} />\r\n                </div>\r\n                <div style={{ display: this.state.gameOver && this.state.gameStarted && (!this.state.questions) ? \"block\" : \"none\" }}>\r\n                    <h1 className=\"final-score\" style={{ display: this.state.gameOver ? \"block\" : \"none\" }}>Final Score: {this.state.totalScore}</h1>\r\n                    <h1 className=\"leaderboard-headline\">Top 10 leaderboard</h1>\r\n                    <table className=\"leaderboard-table\" style={{ display: this.state.leaderboard ? \"block\" : \"none\", backgroundColor: \"#e6e6e6\", width: \"19rem\", margin: \"1rem auto\", border: \"1px solid black\", borderRadius: 25, padding:\"1rem\" }}>\r\n                        <tr>\r\n                            <td style={{width:\"2rem\"}}>#</td>\r\n                            <td style={{ width: \"10rem\" }}>name</td>\r\n                            <td style={{ width: \"5rem\" }}>score</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 0 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 0 && this.state.name.toUpperCase().trim() === this.state.leaderboard[0].name.toUpperCase().trim() && \"red\", width:\"2rem\" }}>1</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 0 && this.state.name.toUpperCase().trim() === this.state.leaderboard[0].name.toUpperCase().trim() && \"red\", width:\"10rem\" }}>{this.state.leaderboard.length > 0 && this.state.leaderboard[0].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 0 && this.state.name.toUpperCase().trim() === this.state.leaderboard[0].name.toUpperCase().trim() && \"red\", width:\"5rem\" }}>{this.state.leaderboard.length > 0 && this.state.leaderboard[0].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 1 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 1 && this.state.name.toUpperCase().trim() === this.state.leaderboard[1].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>2</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 1 && this.state.name.toUpperCase().trim() === this.state.leaderboard[1].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 1 && this.state.leaderboard[1].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 1 && this.state.name.toUpperCase().trim() === this.state.leaderboard[1].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 1 && this.state.leaderboard[1].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 2 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 2 && this.state.name.toUpperCase().trim() === this.state.leaderboard[2].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>3</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 2 && this.state.name.toUpperCase().trim() === this.state.leaderboard[2].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 2 && this.state.leaderboard[2].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 2 && this.state.name.toUpperCase().trim() === this.state.leaderboard[2].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 2 && this.state.leaderboard[2].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 3 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 3 && this.state.name.toUpperCase().trim() === this.state.leaderboard[3].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>4</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 3 && this.state.name.toUpperCase().trim() === this.state.leaderboard[3].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 3 && this.state.leaderboard[3].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 3 && this.state.name.toUpperCase().trim() === this.state.leaderboard[3].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 3 && this.state.leaderboard[3].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 4 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 4 && this.state.name.toUpperCase().trim() === this.state.leaderboard[4].name.toUpperCase().trim() && \"red\", width:\"2rem\" }}>5</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 4 && this.state.name.toUpperCase().trim() === this.state.leaderboard[4].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 4 && this.state.leaderboard[4].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 4 && this.state.name.toUpperCase().trim() === this.state.leaderboard[4].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 4 && this.state.leaderboard[4].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 5 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 5 && this.state.name.toUpperCase().trim() === this.state.leaderboard[5].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>6</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 5 && this.state.name.toUpperCase().trim() === this.state.leaderboard[5].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 5 && this.state.leaderboard[5].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 5 && this.state.name.toUpperCase().trim() === this.state.leaderboard[5].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 5 && this.state.leaderboard[5].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 6 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 6 && this.state.name.toUpperCase().trim() === this.state.leaderboard[6].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>7</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 6 && this.state.name.toUpperCase().trim() === this.state.leaderboard[6].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 6 && this.state.leaderboard[6].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 6 && this.state.name.toUpperCase().trim() === this.state.leaderboard[6].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 6 && this.state.leaderboard[6].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 7 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 7 && this.state.name.toUpperCase().trim() === this.state.leaderboard[7].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>8</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 7 && this.state.name.toUpperCase().trim() === this.state.leaderboard[7].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 7 && this.state.leaderboard[7].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 7 && this.state.name.toUpperCase().trim() === this.state.leaderboard[7].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 7 && this.state.leaderboard[7].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 8 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 8 && this.state.name.toUpperCase().trim() === this.state.leaderboard[8].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>9</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 8 && this.state.name.toUpperCase().trim() === this.state.leaderboard[8].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length>8 && this.state.leaderboard[8].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 8 && this.state.name.toUpperCase().trim() === this.state.leaderboard[8].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 8 && this.state.leaderboard[8].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 9 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 9 && this.state.name.toUpperCase().trim() === this.state.leaderboard[9].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>10</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 9 && this.state.name.toUpperCase().trim() === this.state.leaderboard[9].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 9 && this.state.leaderboard[9].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 9 && this.state.name.toUpperCase().trim() === this.state.leaderboard[9].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 9 && this.state.leaderboard[9].score}</td>\r\n                        </tr>\r\n                    </table>\r\n                    <div className=\"start-button\" onClick={this.handleNewGame}>play agian!</div>\r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n}\r\n\r\nexport default Question","import React from 'react';\r\nimport './App.css';\r\nimport Question from './Question';\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n          <Question />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}